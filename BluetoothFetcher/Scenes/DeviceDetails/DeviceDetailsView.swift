//
//  DeviceDetailsView.swift
//  BluetoothFetcher
//
//  Created by Martin Lukacs on 05/07/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the MVVM Xcode Templates
//

import Resolver
import SwiftUI

struct DeviceDetailsView: View {
    @InjectedObject private var viewModel: DeviceDetailsViewModel
    @State var deviceInfos: BluetoothDeviceInfo

    var body: some View {
        containerView
            .onAppear {
                guard deviceInfos.isConnectable else {
                    return
                }
                viewModel.fetchServiceInformations(for: deviceInfos)
            }
            .onDisappear {
                viewModel.disconnectFromDevice()
            }
            .navigationTitle(deviceInfos.deviceInfo.name ?? "")
    }
}

private extension DeviceDetailsView {
    var containerView: some View {
        ScrollView {
            mainInfos

            if !viewModel.services.isEmpty {
                servicesListInfos
            }
        }
    }
}

private extension DeviceDetailsView {
    var mainInfos: some View {
        VStack(alignment: .leading, spacing: 10) {
            Text("Device name: \(deviceInfos.deviceInfo.name ?? "")")
            Text("Device identifier: \(deviceInfos.deviceInfo.identifier)")
            Text("Device RSSI: \(deviceInfos.rssi)")
            Text("Can connect to device: \(deviceInfos.isConnectable ? "true" : "false")")
        }.frame(width: .infinity)
            .padding(15)
    }
}

private extension DeviceDetailsView {
    var servicesListInfos: some View {
        VStack(alignment: .leading) {
            Text("Peripheral Services")
                .font(.headline)
                .fontWeight(.bold)
            ForEach(viewModel.services, id: \.uuid) { service in
                ServiceAndCharsTile(service: service, characteristics: viewModel.getcharacteristics(for: service)).padding()
            }
        }.padding(5)
    }
}

//
// struct DeviceDetailsView_Previews: PreviewProvider {
//    static var previews: some View {
//        DeviceDetailsView()
//    }
// }
